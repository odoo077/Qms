# Generated by Django 5.2.7 on 2025-10-23 15:11

import base.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContractType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(max_length=128)),
                ('code', models.CharField(blank=True, max_length=128)),
                ('sequence', models.IntegerField(default=10)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'hr_contract_type',
                'ordering': ('sequence',),
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('active', models.BooleanField(db_index=True, default=True)),
                ('name', models.CharField(max_length=255)),
                ('complete_name', models.CharField(blank=True, db_index=True, max_length=1024)),
                ('parent_path', models.CharField(blank=True, db_index=True, max_length=2048)),
                ('note', models.TextField(blank=True)),
                ('color', models.IntegerField(default=0)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='departments', to='base.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='hr.department')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'hr_department',
                'ordering': ('name',),
            },
            managers=[
                ('objects', base.models.CompanyScopeManager()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('active', models.BooleanField(db_index=True, default=True)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('private_phone', models.CharField(blank=True, max_length=64)),
                ('private_email', models.EmailField(blank=True, max_length=254)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('place_of_birth', models.CharField(blank=True, max_length=255)),
                ('birthday_public_display_string', models.CharField(blank=True, max_length=64)),
                ('coach_id_cache', models.CharField(blank=True, max_length=255)),
                ('emergency_contact', models.CharField(blank=True, max_length=255)),
                ('emergency_phone', models.CharField(blank=True, max_length=64)),
                ('certificate', models.CharField(blank=True, max_length=64)),
                ('study_field', models.CharField(blank=True, max_length=128)),
                ('study_school', models.CharField(blank=True, max_length=128)),
                ('marital_status', models.CharField(blank=True, choices=[('single', 'Single'), ('married', 'Married'), ('divorced', 'Divorced'), ('widow', 'Widow')], max_length=32)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=16)),
                ('children', models.PositiveIntegerField(default=0, help_text='Number of children')),
                ('identification_id', models.CharField(blank=True, help_text='National ID / Identification', max_length=64)),
                ('passport_id', models.CharField(blank=True, help_text='Passport number', max_length=64)),
                ('bank_account', models.CharField(blank=True, help_text='Bank account details', max_length=128)),
                ('car', models.CharField(blank=True, help_text='Vehicle information (if applicable)', max_length=128)),
                ('barcode', models.CharField(blank=True, max_length=64, null=True)),
                ('pin', models.CharField(blank=True, max_length=32)),
                ('coach', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coachees', to='hr.employee')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='base.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='hr.department')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_employees', to='hr.employee')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to=settings.AUTH_USER_MODEL)),
                ('work_contact', models.ForeignKey(blank=True, editable=False, help_text='Assigned automatically from User partner or created under company.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_work_contact', to='base.partner')),
            ],
            options={
                'db_table': 'hr_employee',
                'permissions': [('approve_employee', 'Can approve employee record'), ('view_private_fields', 'Can view employee private fields')],
            },
            managers=[
                ('objects', base.models.CompanyScopeManager()),
            ],
        ),
        migrations.AddField(
            model_name='department',
            name='manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_departments', to='hr.employee'),
        ),
        migrations.CreateModel(
            name='EmployeeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('color', models.PositiveSmallIntegerField(default=1)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'hr_employee_category',
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='categories',
            field=models.ManyToManyField(blank=True, related_name='employees', to='hr.employeecategory'),
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('active', models.BooleanField(db_index=True, default=True)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('sequence', models.IntegerField(default=10)),
                ('description', models.TextField(blank=True)),
                ('requirements', models.TextField(blank=True)),
                ('no_of_recruitment', models.PositiveIntegerField(default=1)),
                ('no_of_employee', models.PositiveIntegerField(default=0, editable=False)),
                ('expected_employees', models.PositiveIntegerField(default=0, editable=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='jobs', to='base.company')),
                ('contract_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hr.contracttype')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='jobs', to='hr.department')),
                ('recruiter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recruiting_jobs', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'hr_job',
                'ordering': ('sequence',),
            },
            managers=[
                ('objects', base.models.CompanyScopeManager()),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='job',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employee_set', to='hr.job'),
        ),
        migrations.CreateModel(
            name='WorkLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('active', models.BooleanField(db_index=True, default=True)),
                ('name', models.CharField(max_length=255)),
                ('location_type', models.CharField(choices=[('home', 'Home'), ('office', 'Office'), ('other', 'Other')], default='office', max_length=10)),
                ('location_number', models.CharField(blank=True, max_length=64)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.partner')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'hr_work_location',
                'ordering': ('name',),
            },
            managers=[
                ('objects', base.models.CompanyScopeManager()),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='work_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='hr.worklocation'),
        ),
        migrations.AddIndex(
            model_name='contracttype',
            index=models.Index(fields=['name'], name='hr_contract_name_idx'),
        ),
        migrations.AddIndex(
            model_name='contracttype',
            index=models.Index(fields=['code'], name='hr_contract_code_idx'),
        ),
        migrations.AddIndex(
            model_name='department',
            index=models.Index(fields=['company', 'active'], name='hr_departme_company_active_idx'),
        ),
        migrations.AddIndex(
            model_name='department',
            index=models.Index(fields=['company', 'parent'], name='hr_departme_company_parent_idx'),
        ),
        migrations.AddIndex(
            model_name='department',
            index=models.Index(fields=['parent_path'], name='hr_departme_parent_path_idx'),
        ),
        migrations.AddIndex(
            model_name='department',
            index=models.Index(fields=['complete_name'], name='hr_departme_complete_name_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['company', 'active'], name='hr_job_company_active_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['department', 'active'], name='hr_job_departm_active_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['name'], name='hr_job_name_idx'),
        ),
        migrations.AddConstraint(
            model_name='job',
            constraint=models.UniqueConstraint(fields=('name', 'company', 'department'), name='uniq_job_name_company_department'),
        ),
        migrations.AddConstraint(
            model_name='job',
            constraint=models.CheckConstraint(condition=models.Q(('no_of_recruitment__gte', 0)), name='chk_no_of_recruitment_nonneg'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['company', 'active'], name='hr_employee_company_active_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['name'], name='hr_employee_name_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['active'], name='hr_employee_active_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['department'], name='hr_employee_departm_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['company', 'user'], name='hr_emp_comp_user_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['company', 'work_contact'], name='hr_emp_comp_workct_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['company', 'pin'], name='hr_emp_comp_pin_idx'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['company', 'barcode'], name='hr_emp_comp_barcode_idx'),
        ),
        migrations.AddConstraint(
            model_name='employee',
            constraint=models.UniqueConstraint(condition=models.Q(('barcode__isnull', False)), fields=('barcode',), name='uniq_employee_barcode'),
        ),
        migrations.AddConstraint(
            model_name='employee',
            constraint=models.CheckConstraint(condition=models.Q(('pk', models.F('manager')), _negated=True), name='employee_manager_not_self'),
        ),
        migrations.AddConstraint(
            model_name='employee',
            constraint=models.CheckConstraint(condition=models.Q(('pk', models.F('coach')), _negated=True), name='employee_coach_not_self'),
        ),
        migrations.AddConstraint(
            model_name='employee',
            constraint=models.UniqueConstraint(condition=models.Q(('pin__gt', '')), fields=('company', 'pin'), name='uniq_employee_pin_per_company'),
        ),
        migrations.AddConstraint(
            model_name='employee',
            constraint=models.UniqueConstraint(condition=models.Q(('user__isnull', False)), fields=('company', 'user'), name='uniq_employee_user_per_company'),
        ),
    ]
