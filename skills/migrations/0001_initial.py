# Generated by Django 5.2.7 on 2025-10-24 21:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        ('hr', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ResumeLineType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Name')),
                ('sequence', models.PositiveIntegerField(db_index=True, default=10, verbose_name='Sequence')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('properties_definition', models.JSONField(blank=True, default=dict, verbose_name='Properties schema')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resume Line Type',
                'verbose_name_plural': 'Resume Line Types',
                'ordering': ('sequence', 'name'),
            },
        ),
        migrations.CreateModel(
            name='ResumeLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=256, verbose_name='Title / Summary')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description / Details')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Date from')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='Date to')),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='resume/certificates/')),
                ('certificate_filename', models.CharField(blank=True, default='', max_length=256)),
                ('external_url', models.URLField(blank=True, default='')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='base.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resume_lines', to='hr.employee')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('line_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lines', to='skills.resumelinetype')),
            ],
            options={
                'verbose_name': 'Resume Line',
                'verbose_name_plural': 'Resume Lines',
                'ordering': ('employee__company__name', 'employee__name', 'line_type__sequence', 'date_start'),
            },
        ),
        migrations.CreateModel(
            name='SkillType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Name')),
                ('sequence', models.PositiveIntegerField(db_index=True, default=10, verbose_name='Sequence')),
                ('color', models.PositiveSmallIntegerField(default=0, verbose_name='Color Index')),
                ('is_certification', models.BooleanField(default=False, verbose_name='Is certification?')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Skill Type',
                'verbose_name_plural': 'Skill Types',
                'ordering': ('sequence', 'name'),
            },
        ),
        migrations.CreateModel(
            name='SkillLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('level_progress', models.PositiveSmallIntegerField(default=0, verbose_name='Progress (0..100)')),
                ('default_level', models.BooleanField(default=False, verbose_name='Default for type')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('skill_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levels', to='skills.skilltype')),
            ],
            options={
                'verbose_name': 'Skill Level',
                'verbose_name_plural': 'Skill Levels',
                'ordering': ('skill_type__sequence', 'level_progress', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('sequence', models.PositiveIntegerField(db_index=True, default=10, verbose_name='Sequence')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('skill_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='skills.skilltype')),
            ],
            options={
                'verbose_name': 'Skill',
                'verbose_name_plural': 'Skills',
                'ordering': ('skill_type__sequence', 'sequence', 'name'),
            },
        ),
        migrations.CreateModel(
            name='EmployeeSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('valid_from', models.DateField(blank=True, null=True, verbose_name='Valid from')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='Valid to')),
                ('note', models.TextField(blank=True, default='', verbose_name='Note')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='base.company')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='hr.employee')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employee_skills', to='skills.skill')),
                ('skill_level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employee_skills', to='skills.skilllevel')),
                ('skill_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employee_skills', to='skills.skilltype')),
            ],
            options={
                'verbose_name': 'Employee Skill',
                'verbose_name_plural': 'Employee Skills',
                'ordering': ('employee__company__name', 'employee__name', 'skill_type__sequence', 'skill__name'),
                'permissions': [('rate_skill', 'Can rate/evaluate employee skill')],
            },
        ),
        migrations.AddIndex(
            model_name='resumelinetype',
            index=models.Index(fields=['active', 'sequence'], name='resumelinetype_active_seq_idx'),
        ),
        migrations.AddIndex(
            model_name='resumeline',
            index=models.Index(fields=['company', 'employee', 'active'], name='rl_comp_emp_act_idx'),
        ),
        migrations.AddIndex(
            model_name='resumeline',
            index=models.Index(fields=['line_type', 'active'], name='rl_type_act_idx'),
        ),
        migrations.AddIndex(
            model_name='skilltype',
            index=models.Index(fields=['active', 'sequence'], name='skilltype_active_seq_idx'),
        ),
        migrations.AddConstraint(
            model_name='skilllevel',
            constraint=models.CheckConstraint(condition=models.Q(('level_progress__gte', 0), ('level_progress__lte', 100)), name='skilllevel_progress_0_100_chk'),
        ),
        migrations.AddConstraint(
            model_name='skilllevel',
            constraint=models.UniqueConstraint(fields=('skill_type', 'name'), name='skilllevel_unique_name_per_type'),
        ),
        migrations.AddConstraint(
            model_name='skilllevel',
            constraint=models.UniqueConstraint(fields=('skill_type', 'level_progress'), name='skilllevel_unique_progress_per_type'),
        ),
        migrations.AddConstraint(
            model_name='skilllevel',
            constraint=models.UniqueConstraint(condition=models.Q(('default_level', True)), fields=('skill_type', 'default_level'), name='skilllevel_single_default_per_type'),
        ),
        migrations.AddIndex(
            model_name='skill',
            index=models.Index(fields=['active', 'skill_type'], name='skill_active_type_idx'),
        ),
        migrations.AddConstraint(
            model_name='skill',
            constraint=models.UniqueConstraint(fields=('skill_type', 'name'), name='skill_unique_name_per_type'),
        ),
        migrations.AddIndex(
            model_name='employeeskill',
            index=models.Index(fields=['company', 'employee', 'active'], name='es_comp_emp_act_idx'),
        ),
        migrations.AddIndex(
            model_name='employeeskill',
            index=models.Index(fields=['skill_type', 'skill_level'], name='es_type_lvl_idx'),
        ),
        migrations.AddConstraint(
            model_name='employeeskill',
            constraint=models.UniqueConstraint(fields=('employee', 'skill'), name='employeeskill_unique_employee_skill', violation_error_message='This employee already has this skill.'),
        ),
        migrations.AddConstraint(
            model_name='employeeskill',
            constraint=models.CheckConstraint(condition=models.Q(('valid_to__isnull', True), ('valid_from__isnull', True), ('valid_to__gte', models.F('valid_from')), _connector='OR'), name='employeeskill_valid_to_gte_from_chk'),
        ),
    ]
